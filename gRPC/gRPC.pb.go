// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: gRPC.proto

package chitchat

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageType int32

const (
	MessageType_CHAT  MessageType = 0
	MessageType_JOIN  MessageType = 1
	MessageType_LEAVE MessageType = 2
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "CHAT",
		1: "JOIN",
		2: "LEAVE",
	}
	MessageType_value = map[string]int32{
		"CHAT":  0,
		"JOIN":  1,
		"LEAVE": 2,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_gRPC_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_gRPC_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_gRPC_proto_rawDescGZIP(), []int{0}
}

type ChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          string                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` //Max 128 chars
	LogicalTime   int64                  `protobuf:"varint,3,opt,name=logical_time,json=logicalTime,proto3" json:"logical_time,omitempty"`
	Type          MessageType            `protobuf:"varint,4,opt,name=type,proto3,enum=chitchat.MessageType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_gRPC_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_gRPC_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessage) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ChatMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChatMessage) GetLogicalTime() int64 {
	if x != nil {
		return x.LogicalTime
	}
	return 0
}

func (x *ChatMessage) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_CHAT
}

type ChatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatResponse) Reset() {
	*x = ChatResponse{}
	mi := &file_gRPC_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatResponse) ProtoMessage() {}

func (x *ChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatResponse.ProtoReflect.Descriptor instead.
func (*ChatResponse) Descriptor() ([]byte, []int) {
	return file_gRPC_proto_rawDescGZIP(), []int{1}
}

func (x *ChatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ChatResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type StreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Room          string                 `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	mi := &file_gRPC_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_gRPC_proto_rawDescGZIP(), []int{2}
}

func (x *StreamRequest) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

var File_gRPC_proto protoreflect.FileDescriptor

const file_gRPC_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"gRPC.proto\x12\bchitchat\"\x89\x01\n" +
	"\vChatMessage\x12\x12\n" +
	"\x04user\x18\x01 \x01(\tR\x04user\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12!\n" +
	"\flogical_time\x18\x03 \x01(\x03R\vlogicalTime\x12)\n" +
	"\x04type\x18\x04 \x01(\x0e2\x15.chitchat.MessageTypeR\x04type\">\n" +
	"\fChatResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"#\n" +
	"\rStreamRequest\x12\x12\n" +
	"\x04room\x18\x01 \x01(\tR\x04room*,\n" +
	"\vMessageType\x12\b\n" +
	"\x04CHAT\x10\x00\x12\b\n" +
	"\x04JOIN\x10\x01\x12\t\n" +
	"\x05LEAVE\x10\x022\x8f\x01\n" +
	"\vChatService\x12<\n" +
	"\vSendMessage\x12\x15.chitchat.ChatMessage\x1a\x16.chitchat.ChatResponse\x12B\n" +
	"\x0eStreamMessages\x12\x17.chitchat.StreamRequest\x1a\x15.chitchat.ChatMessage0\x01B3Z1github.com/VictorTroelsen/Chit-Chat/gRPC;chitchatb\x06proto3"

var (
	file_gRPC_proto_rawDescOnce sync.Once
	file_gRPC_proto_rawDescData []byte
)

func file_gRPC_proto_rawDescGZIP() []byte {
	file_gRPC_proto_rawDescOnce.Do(func() {
		file_gRPC_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gRPC_proto_rawDesc), len(file_gRPC_proto_rawDesc)))
	})
	return file_gRPC_proto_rawDescData
}

var file_gRPC_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gRPC_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_gRPC_proto_goTypes = []any{
	(MessageType)(0),      // 0: chitchat.MessageType
	(*ChatMessage)(nil),   // 1: chitchat.ChatMessage
	(*ChatResponse)(nil),  // 2: chitchat.ChatResponse
	(*StreamRequest)(nil), // 3: chitchat.StreamRequest
}
var file_gRPC_proto_depIdxs = []int32{
	0, // 0: chitchat.ChatMessage.type:type_name -> chitchat.MessageType
	1, // 1: chitchat.ChatService.SendMessage:input_type -> chitchat.ChatMessage
	3, // 2: chitchat.ChatService.StreamMessages:input_type -> chitchat.StreamRequest
	2, // 3: chitchat.ChatService.SendMessage:output_type -> chitchat.ChatResponse
	1, // 4: chitchat.ChatService.StreamMessages:output_type -> chitchat.ChatMessage
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gRPC_proto_init() }
func file_gRPC_proto_init() {
	if File_gRPC_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gRPC_proto_rawDesc), len(file_gRPC_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gRPC_proto_goTypes,
		DependencyIndexes: file_gRPC_proto_depIdxs,
		EnumInfos:         file_gRPC_proto_enumTypes,
		MessageInfos:      file_gRPC_proto_msgTypes,
	}.Build()
	File_gRPC_proto = out.File
	file_gRPC_proto_goTypes = nil
	file_gRPC_proto_depIdxs = nil
}
